#!/usr/bin/env python

from subprocess import PIPE, Popen
from time import mktime, strptime, time


ALIASES = {
    'annegentle': 'anne gentle',
    'chuck': 'chuck thier',
    'clayg': 'clay gerrard',
    'cthier': 'chuck thier',
    'ed': 'ed leafe',
    'gholt': 'greg holt',
    'glange': 'greg lange',
    'john': 'john dickinson',
    'letterj': 'jay payne',
    'mike barton': 'michael barton',
    'redbo': 'michael barton',
}
RECENT = time() - 86400 * 90
TOP = 20000


author_adds = {}
author_deletes = {}
author_net = {}
author_recent_adds = {}
author_recent_deletes = {}
author_recent_net = {}

for line in Popen(['git', 'log'], stdout=PIPE).stdout:
    if line.startswith('commit '):
        commit = line.strip().split()[1]
        author = None
        timestamp = 0
        adds = 0
        deletes = 0
        body_started = False
        for line in Popen(['git', 'show', commit], stdout=PIPE).stdout:
            if body_started:
                if line.startswith('+'):
                    if not line.startswith('+++ '):
                        adds += 1
                elif line.startswith('-'):
                    if not line.startswith('--- '):
                        deletes += 1
            elif line == '\n':
                body_started = True
            elif line.startswith('Author: '):
                author = line.split(':', 1)[1].split('<', 1)[0].strip().lower()
                author = ALIASES.get(author, author)
            elif line.startswith('Date: '):
                line = ' '.join(line.split()[2:6])
                timestamp = mktime(strptime(line, '%b %d %H:%M:%S %Y'))
        author_adds[author] = author_adds.get(author, 0) + adds
        author_deletes[author] = author_deletes.get(author, 0) + deletes
        author_net[author] = author_net.get(author, 0) + adds - deletes
        if timestamp >= RECENT:
            author_recent_adds[author] = \
                author_recent_adds.get(author, 0) + adds
            author_recent_deletes[author] = \
                author_recent_deletes.get(author, 0) + deletes
            author_recent_net[author] = \
                author_recent_net.get(author, 0) + adds - deletes

author_adds = \
    sorted(author_adds.items(), key=lambda x: x[1], reverse=True)
author_deletes = \
    sorted(author_deletes.items(), key=lambda x: x[1], reverse=True)
author_net = \
    sorted(author_net.items(), key=lambda x: x[1], reverse=True)
author_recent_adds = \
    sorted(author_recent_adds.items(), key=lambda x: x[1], reverse=True)
author_recent_deletes = \
    sorted(author_recent_deletes.items(), key=lambda x: x[1], reverse=True)
author_recent_net = \
    sorted(author_recent_net.items(), key=lambda x: x[1], reverse=True)

print '-- Lines Added All Time -------   ------ Recently ---------------'
for x in xrange(min(TOP, len(author_adds))):
    a, c = author_adds[x]
    try:
        ra, rc = author_recent_adds[x]
    except IndexError:
        ra, rc = '', 0
    print '%10s %-20s   %10s %-20s' % (c, a, rc if ra else '', ra)
print
print '-- Lines Removed All Time -----   ------ Recently ---------------'
for x in xrange(min(TOP, len(author_deletes))):
    a, c = author_deletes[x]
    try:
        ra, rc = author_recent_deletes[x]
    except IndexError:
        ra, rc = '', 0
    print '%10s %-20s   %10s %-20s' % (c, a, rc if ra else '', ra)
print
print '-- Lines Net All Time ---------   ------ Recently ---------------'
for x in xrange(min(TOP, len(author_net))):
    a, c = author_net[x]
    try:
        ra, rc = author_recent_net[x]
    except IndexError:
        ra, rc = '', 0
    print '%10s %-20s   %10s %-20s' % (c, a, rc if ra else '', ra)
